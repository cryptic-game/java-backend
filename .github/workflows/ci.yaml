name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: 17
  JAVA_DISTRO: temurin

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 17 ]
        java-distro: [ temurin, zulu, liberica, microsoft ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.java-distro }}
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with Gradle
        run: ./gradlew test --stacktrace --no-daemon

  build:
    needs: [ test ]
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:
      matrix:
        service: [ cryptic-auth ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Jars
        run: ./gradlew :${{ matrix.service }}:assemble --stacktrace --no-daemon

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}
          path: ${{ matrix.service }}/build/libs

  docker:
    needs: [ build ]
    runs-on: ubuntu-latest

    permissions:
      packages: write

    strategy:
      matrix:
        service: [ cryptic-auth ]
        flavor: [ jvm ] # native

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Docker Image
        run: ./gradlew :${{ matrix.service }}:bootBuildImage --imageName=${{ matrix.service }} -Pflavor=${{ matrix.flavor }} --stacktrace --no-daemon

      - name: Docker meta
        id: meta
        if: github.event_name != 'pull_request'
        uses: MarcelCoding/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}
          tag-semver: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: ${{ matrix.flavor }}
          main-flavor: ${{ matrix.flavor == 'jvm' }}

      - uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push to ghcr.io
        if: github.event_name != 'pull_request'
        run: |
          for image in $(echo "${{ steps.meta.outputs.tags }}" | cat -); do
            docker tag ${{ matrix.service }} $image
            docker push $image
          done
